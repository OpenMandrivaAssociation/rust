commit 4436c9d35498e7ae3da261f6141d6d73b915e1e8
gpg: Signature made Sat 30 Nov 2019 02:43:27 GMT
gpg:                using RSA key 4628C5D82CFF65D68164A78AF9BA143B95FF6D82
gpg: Can't check signature: No public key
Author: David Tolnay <dtolnay@gmail.com>
Date:   Wed Nov 27 10:29:00 2019 -0800

    Format libstd with rustfmt
    
    This commit applies rustfmt with rust-lang/rust's default settings to
    files in src/libstd *that are not involved in any currently open PR* to
    minimize merge conflicts. THe list of files involved in open PRs was
    determined by querying GitHub's GraphQL API with this script:
    https://gist.github.com/dtolnay/aa9c34993dc051a4f344d1b10e4487e8
    
    With the list of files from the script in outstanding_files, the
    relevant commands were:
    
        $ find src/libstd -name '*.rs' \
            | xargs rustfmt --edition=2018 --unstable-features --skip-children
        $ rg libstd outstanding_files | xargs git checkout --
    
    Repeating this process several months apart should get us coverage of
    most of the rest of libstd.
    
    To confirm no funny business:
    
        $ git checkout $THIS_COMMIT^
        $ git show --pretty= --name-only $THIS_COMMIT \
            | xargs rustfmt --edition=2018 --unstable-features --skip-children
        $ git diff $THIS_COMMIT  # there should be no difference

diff --git a/src/libstd/sys_common/alloc.rs b/src/libstd/sys_common/alloc.rs
index 1cfc7ed17f2..713b9949f64 100644
--- a/src/libstd/sys_common/alloc.rs
+++ b/src/libstd/sys_common/alloc.rs
@@ -6,20 +6,24 @@ use crate::ptr;
 
 // The minimum alignment guaranteed by the architecture. This value is used to
 // add fast paths for low alignment values.
-#[cfg(all(any(target_arch = "x86",
-              target_arch = "arm",
-              target_arch = "mips",
-              target_arch = "powerpc",
-              target_arch = "powerpc64",
-              target_arch = "asmjs",
-              target_arch = "wasm32",
-              target_arch = "hexagon")))]
+#[cfg(all(any(
+    target_arch = "x86",
+    target_arch = "arm",
+    target_arch = "mips",
+    target_arch = "powerpc",
+    target_arch = "powerpc64",
+    target_arch = "asmjs",
+    target_arch = "wasm32",
+    target_arch = "hexagon"
+)))]
 pub const MIN_ALIGN: usize = 8;
-#[cfg(all(any(target_arch = "x86_64",
-              target_arch = "aarch64",
-              target_arch = "mips64",
-              target_arch = "s390x",
-              target_arch = "sparc64")))]
+#[cfg(all(any(
+    target_arch = "x86_64",
+    target_arch = "aarch64",
+    target_arch = "mips64",
+    target_arch = "s390x",
+    target_arch = "sparc64"
+)))]
 pub const MIN_ALIGN: usize = 16;
 
 pub unsafe fn realloc_fallback(
